
package filterimage;
        
        
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.FilteredImageSource;
import java.awt.image.ImageFilter;
import java.awt.image.ImageProducer;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author aditya
 */
public class ImageForm extends javax.swing.JFrame {

    /** Creates new form ImageForm */
    public static String filename;
    public ImageForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TbrIcon = new javax.swing.JToolBar();
        BtnOpen = new javax.swing.JButton();
        BtnSave = new javax.swing.JButton();
        BtnExit = new javax.swing.JButton();
        Pnlbase = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnNormal = new javax.swing.JButton();
        btnGray = new javax.swing.JButton();
        btnSepia = new javax.swing.JButton();
        btnNegatif = new javax.swing.JButton();
        PnlImage = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        MenuBar = new javax.swing.JMenuBar();
        MenuOpen = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        MenuClose = new javax.swing.JMenuItem();
        MenuSaveAs = new javax.swing.JMenuItem();
        MenuExit = new javax.swing.JMenuItem();
        MenuHelp = new javax.swing.JMenu();
        MnuHelp = new javax.swing.JMenuItem();
        MnuAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ImageFilter");

        TbrIcon.setRollover(true);

        BtnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/folder 24x24.png"))); // NOI18N
        BtnOpen.setText("Open");
        BtnOpen.setFocusable(false);
        BtnOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnOpenActionPerformed(evt);
            }
        });
        TbrIcon.add(BtnOpen);

        BtnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/diskette  24x24.png"))); // NOI18N
        BtnSave.setText("Save");
        BtnSave.setFocusable(false);
        BtnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveActionPerformed(evt);
            }
        });
        TbrIcon.add(BtnSave);

        BtnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/doorway 24x24.png"))); // NOI18N
        BtnExit.setText("Exit");
        BtnExit.setFocusable(false);
        BtnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnExit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExitActionPerformed(evt);
            }
        });
        TbrIcon.add(BtnExit);

        jToolBar1.setRollover(true);

        btnNormal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/image.png"))); // NOI18N
        btnNormal.setText("Normal");
        btnNormal.setFocusable(false);
        btnNormal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNormal.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNormalActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNormal);

        btnGray.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/gray.jpg"))); // NOI18N
        btnGray.setText("Grayscale");
        btnGray.setFocusable(false);
        btnGray.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGray.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrayActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGray);

        btnSepia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/sepia.jpg"))); // NOI18N
        btnSepia.setText("Sepia");
        btnSepia.setFocusable(false);
        btnSepia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSepia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSepia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSepiaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSepia);

        btnNegatif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/negatif.jpg"))); // NOI18N
        btnNegatif.setText("Negatif");
        btnNegatif.setFocusable(false);
        btnNegatif.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNegatif.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNegatif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNegatifActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNegatif);

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout PnlImageLayout = new javax.swing.GroupLayout(PnlImage);
        PnlImage.setLayout(PnlImageLayout);
        PnlImageLayout.setHorizontalGroup(
            PnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlImageLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PnlImageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PnlImageLayout.setVerticalGroup(
            PnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlImageLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PnlbaseLayout = new javax.swing.GroupLayout(Pnlbase);
        Pnlbase.setLayout(PnlbaseLayout);
        PnlbaseLayout.setHorizontalGroup(
            PnlbaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlbaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlbaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PnlImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE))
                .addContainerGap())
        );
        PnlbaseLayout.setVerticalGroup(
            PnlbaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlbaseLayout.createSequentialGroup()
                .addComponent(PnlImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        MenuOpen.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/folder.png"))); // NOI18N
        jMenuItem1.setText("Open Image");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        MenuOpen.add(jMenuItem1);

        MenuClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        MenuClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/file.png"))); // NOI18N
        MenuClose.setText("Close");
        MenuClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuCloseActionPerformed(evt);
            }
        });
        MenuOpen.add(MenuClose);

        MenuSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        MenuSaveAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/diskette.png"))); // NOI18N
        MenuSaveAs.setText("Save As");
        MenuSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSaveAsActionPerformed(evt);
            }
        });
        MenuOpen.add(MenuSaveAs);

        MenuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/filterimage/doorway.png"))); // NOI18N
        MenuExit.setText("Exit");
        MenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuExitActionPerformed(evt);
            }
        });
        MenuOpen.add(MenuExit);

        MenuBar.add(MenuOpen);

        MenuHelp.setText("Help");

        MnuHelp.setText("Help");
        MnuHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuHelpActionPerformed(evt);
            }
        });
        MenuHelp.add(MnuHelp);

        MnuAbout.setText("About");
        MnuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MnuAboutActionPerformed(evt);
            }
        });
        MenuHelp.add(MnuAbout);

        MenuBar.add(MenuHelp);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pnlbase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(TbrIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TbrIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Pnlbase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "jpg,png,gif", "png", "gif", "jpg");
        chooser.setFileFilter(filter);
        chooser.setMultiSelectionEnabled(false);
        int i = chooser.showOpenDialog(this);
        if(i == JFileChooser.CANCEL_OPTION){
            return;
        }
        File file = chooser.getSelectedFile();
        filename = file.getAbsolutePath();
        BufferedImage bufferedImage = null;
        try{
            bufferedImage = ImageIO.read(new File(filename));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image scaledImage = bufferedImage.getScaledInstance(lblImage.getWidth(),
                lblImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(scaledImage);
        lblImage.setIcon(image);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void MenuSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSaveAsActionPerformed
        // TODO add your handling code here
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "jpg(*.jpg)","jpg");
        chooser.setFileFilter(filter);
        chooser.setMultiSelectionEnabled(false);
        chooser.setDialogTitle("Pilih Tempat Menyimpan");
        BufferedImage image = new BufferedImage(lblImage.getWidth(), lblImage.getHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = image.createGraphics();
        lblImage.printAll(g2d);
        int userSelection = chooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            try{
                File fileSave = chooser.getSelectedFile();
                String output = fileSave.getAbsolutePath();
                ImageIO.write(image,"jpg", new File(chooser.getSelectedFile().getPath()+".jpg"));
                System.out.println("File Saved To : "+output);
            }catch(IOException e){
      e.printStackTrace();
    }
}
    }//GEN-LAST:event_MenuSaveAsActionPerformed

    private void BtnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "jpg,png,gif", "png", "gif", "jpg");
        chooser.setFileFilter(filter);
        chooser.setMultiSelectionEnabled(false);
        int i = chooser.showOpenDialog(this);
        if(i == JFileChooser.CANCEL_OPTION){
            return;
        }
        File file = chooser.getSelectedFile();
        filename = file.getAbsolutePath();
        BufferedImage bufferedImage = null;
        try{
            bufferedImage = ImageIO.read(new File(filename));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image scaledImage = bufferedImage.getScaledInstance(lblImage.getWidth(),
                lblImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(scaledImage);
        lblImage.setIcon(image);
        
    }//GEN-LAST:event_BtnOpenActionPerformed

    private void BtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveActionPerformed
        // TODO add your handling code here:
    BufferedImage bufferedImage = null;
    File file = null;

    //read gambar
    try{
      file = new File(ImageForm.filename);
      BufferedImage image = new BufferedImage(lblImage.getWidth(), lblImage.getHeight(), BufferedImage.TYPE_INT_RGB);
        Graphics2D g2d = image.createGraphics();
        lblImage.printAll(g2d);
      ImageIO.write(image, "jpg", file);
      System.out.println("File Saved To : "+file);
    }catch(IOException e){
      e.printStackTrace();
    }

    }//GEN-LAST:event_BtnSaveActionPerformed

    private void BtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_BtnExitActionPerformed

    private void MenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_MenuExitActionPerformed

    private void btnSepiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSepiaActionPerformed
        
    BufferedImage bufferedImage = null;
    File file = null;

    //read gambar
    try{
      file = new File(ImageForm.filename);
      bufferedImage = ImageIO.read(file);
    }catch(IOException e){
      e.printStackTrace();
    }
    
        int width = bufferedImage.getWidth(); 
        int height = bufferedImage.getHeight(); 
  
        //convert to sepia 
        for(int y = 0; y < height; y++) 
        { 
            for(int x = 0; x < width; x++) 
            { 
                int p = bufferedImage.getRGB(x,y); 
  
                int a = (p>>24)&0xff; 
                int R = (p>>16)&0xff; 
                int G = (p>>8)&0xff; 
                int B = p&0xff; 
  
                //calculate newRed, newGreen, newBlue 
                int newRed = (int)(0.393*R + 0.769*G + 0.189*B); 
                int newGreen = (int)(0.349*R + 0.686*G + 0.168*B); 
                int newBlue = (int)(0.272*R + 0.534*G + 0.131*B); 
  
                //check condition 
                if (newRed > 255) 
                    R = 255; 
                else
                    R = newRed; 
  
                if (newGreen > 255) 
                    G = 255; 
                else
                    G = newGreen; 
  
                if (newBlue > 255) 
                    B = 255; 
                else
                    B = newBlue; 
  
                //set new RGB value 
                p = (a<<24) | (R<<16) | (G<<8) | B; 
  
                bufferedImage.setRGB(x, y, p); 
            } 
        }//menulis data image baru
    Image scaledImage = bufferedImage.getScaledInstance(lblImage.getWidth(),
                lblImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(scaledImage);
        lblImage.setIcon(image);
        lblImage.repaint(); 
        lblImage.revalidate();
  


    }//GEN-LAST:event_btnSepiaActionPerformed

    private void MnuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuHelpActionPerformed
        // TODO add your handling code here:
        JAbout tk = new JAbout();
        tk.setVisible(true);
    }//GEN-LAST:event_MnuHelpActionPerformed

    private void MnuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MnuAboutActionPerformed
        // TODO add your handling code here:
        JHelp tm = new JHelp();
        tm.setVisible(true);
    }//GEN-LAST:event_MnuAboutActionPerformed

    private void btnGrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrayActionPerformed
        // TODO add your handling code here:
    BufferedImage bufferedImage = null;
    File file = null;

    //read gambar
    try{
      file = new File(ImageForm.filename);
      bufferedImage = ImageIO.read(file);
    }catch(IOException e){
      e.printStackTrace();
    }

    //catch data panjang lebar gambar untuk menghitung avg
    int width = bufferedImage.getWidth();
    int height = bufferedImage.getHeight();

    //mengubah ke grayscale
    for(int y = 0; y < height; y++){
      for(int x = 0; x < width; x++){
        int p = bufferedImage.getRGB(x,y);

        int a = (p>>24)&0xff;
        int r = (p>>16)&0xff;
        int g = (p>>8)&0xff;
        int b = p&0xff;

        //menghitung RGB
        int avg = (r+g+b)/3;

        //mengganti average RGB gambar
        p = (a<<24) | (avg<<16) | (avg<<8) | avg;

        bufferedImage.setRGB(x, y, p);
      }
    }

    //menulis data image baru
    Image scaledImage = bufferedImage.getScaledInstance(lblImage.getWidth(),
                lblImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(scaledImage);
        lblImage.setIcon(image);
        lblImage.revalidate();
        lblImage.repaint();
        
    
    }//GEN-LAST:event_btnGrayActionPerformed

    private void btnNegatifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNegatifActionPerformed
        // TODO add your handling code here:
    BufferedImage bufferedImage = null;
    File file = null;

    //read gambar
    try{
      file = new File(ImageForm.filename);
      bufferedImage = ImageIO.read(file);
    }catch(IOException e){
      e.printStackTrace();
    }
  
        // Get image width and height 
        int width = bufferedImage.getWidth(); 
        int height = bufferedImage.getHeight(); 
  
        // Convert to negative 
        for (int y = 0; y < height; y++) 
        { 
            for (int x = 0; x < width; x++) 
            { 
                int p = bufferedImage.getRGB(x,y); 
                int a = (p>>24)&0xff; 
                int r = (p>>16)&0xff; 
                int g = (p>>8)&0xff; 
                int b = p&0xff; 
  
                //subtract RGB from 255 
                r = 255 - r; 
                g = 255 - g; 
                b = 255 - b; 
  
                //set new RGB value 
                p = (a<<24) | (r<<16) | (g<<8) | b; 
                bufferedImage.setRGB(x, y, p); 
            } 
        } 
        Image scaledImage = bufferedImage.getScaledInstance(lblImage.getWidth(),
                lblImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(scaledImage);
        lblImage.setIcon(image);
        lblImage.revalidate();
        lblImage.repaint(); 
     
    }//GEN-LAST:event_btnNegatifActionPerformed

    private void MenuCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuCloseActionPerformed
        // TODO add your handling code here:
        lblImage.setIcon(null);
    }//GEN-LAST:event_MenuCloseActionPerformed

    private void btnNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNormalActionPerformed
        // TODO add your handling code here:
        BufferedImage bufferedImage = null;
    File file = null;

    //read gambar
    try{
      file = new File(ImageForm.filename);
      bufferedImage = ImageIO.read(file);
    }catch(IOException e){
      e.printStackTrace();
    }
    Image scaledImage = bufferedImage.getScaledInstance(lblImage.getWidth(),
                lblImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(scaledImage);
        lblImage.setIcon(image);
        lblImage.revalidate();
        lblImage.repaint();
    }//GEN-LAST:event_btnNormalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImageForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ImageForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnExit;
    private javax.swing.JButton BtnOpen;
    private javax.swing.JButton BtnSave;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenuItem MenuClose;
    private javax.swing.JMenuItem MenuExit;
    private javax.swing.JMenu MenuHelp;
    private javax.swing.JMenu MenuOpen;
    private javax.swing.JMenuItem MenuSaveAs;
    private javax.swing.JMenuItem MnuAbout;
    private javax.swing.JMenuItem MnuHelp;
    private javax.swing.JPanel PnlImage;
    private javax.swing.JPanel Pnlbase;
    private javax.swing.JToolBar TbrIcon;
    private javax.swing.JButton btnGray;
    private javax.swing.JButton btnNegatif;
    private javax.swing.JButton btnNormal;
    private javax.swing.JButton btnSepia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblImage;
    // End of variables declaration//GEN-END:variables

}
